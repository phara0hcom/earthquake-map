{"version":3,"sources":["constants/index.ts","components/map/FromToInfoBox.tsx","components/map/HoverToolTip.tsx","components/map/MagnitudeScale.tsx","components/buttons/TextLink.tsx","components/MagnitudeComp.tsx","components/map/PopUpToolTip.tsx","components/map/ToggleTable.tsx","components/map/MapArea.tsx","components/UI/InputComp.tsx","components/buttons/ButtonComp.tsx","components/UI/RangeSlider.tsx","hooks/useDelayUnmount.tsx","components/UI/Backdrop.tsx","components/UI/Modal.tsx","components/UI/DateRangeSelect.tsx","keys.ts","hooks/useMapFilter.tsx","api/earthquakeData.ts","hooks/useMapData.tsx","components/UI/LoadingModal.tsx","components/table/DataTable.tsx","components/table/QueryTable.tsx","hooks/useMapViewport.tsx","hooks/useClickState.tsx","App.tsx","serviceWorker.ts","index.tsx","components/UI/DateRangeSelect.module.scss","components/map/MagnitudeScale.module.scss","components/table/DataTable.module.scss","components/map/FromToInfoBox.module.scss","components/map/MapArea.module.scss","components/UI/InputComp.module.scss","components/UI/RangeSlider.module.scss","components/map/PopUpToolTip.module.scss","components/UI/LoadingModal.module.scss","components/MagnitudeComp.module.scss","components/map/ToggleTable.module.scss","components/UI/Modal.module.scss","components/table/QueryTable.module.scss","components/map/HoverToolTip.module.scss","components/buttons/TextLink.module.scss","svg/view_list-24px.svg","components/buttons/ButtonComp.module.scss","components/UI/Backdrop.module.scss","App.module.scss"],"names":["dateRegex","magnitudeScaleColors","FromToInfoBox","dateRange","magnitudeRange","onClick","startDate","endDate","className","classes","fromToInfoBox","aria-label","onKeyPress","event","key","role","tabIndex","icon","values","dayjs","format","min","max","HoverToolTip","hoveredFeature","x","y","tooltip","style","left","top","properties","place","mag","time","MagnitudeScale","scaleColors","magWrapper","magTitle","magColorsWrap","map","color","nr","magWrap","backgroundColor","magColor","magNr","length","nrRender","TextLink","url","children","target","href","textLink","MagnitudeComp","Math","floor","round","PopUpToolTip","feature","lng","lat","onClose","tipSize","anchor","longitude","latitude","closeOnClick","popUpDescription","title","ToggleTable","toggleTable","src","viewTable","alt","toggleTableImg","MapArea","zoom","viewport","clickStateObj","setViewport","mapsApiKey","geoData","mapFilter","openDateSelect","openDateTable","useState","hoverState","setHoverState","clickState","setClickState","hoverX","hoverY","clickedFeature","flex","mapboxApiAccessToken","width","height","onViewportChange","nextViewport","onHover","features","srcEvent","offsetX","offsetY","find","f","layer","id","geometry","coordinates","prev","interactiveLayerIds","undefined","geoLocateStyle","fullscreenControlStyle","navStyle","showCompass","scaleControlStyle","type","data","source","paint","property","stops","InputComp","placeholder","required","value","onChange","disabled","autoFocus","hasError","label","focusRef","useRef","useEffect","current","focus","inputWrap","htmlFor","ref","input","inputError","ButtonComp","secondary","RangeSlider","onSliderChange","steps","changeInput","val","newValue","onChangeSwitch","isOn","inputs","switch","checked","inputMin","rangeInput","inputMax","step","allowCross","useDelayUnmount","delay","show","render","setRender","animate","setAnimate","setTimeout","Backdrop","clicked","join","Modal","clickToClose","modal","defaultModal","transform","opacity","extend","isSameOrBefore","isBetween","DateSelect","useMapFilter","handleClose","today","Date","todayDayJs","endOf","setMapFilter","sliderVal","setSlider","errorMsg","startDateError","endDateError","setError","setInputs","from","to","picker","setPicker","isValidDateRange","start","end","startDayJs","endDayJs","test","dayDiff","diff","currentDayJs","otherType","startDateInput","endDateInput","errorMsgInput","pickerKey","toDate","modifiers","dateRangeWrapper","magRangeWrap","inputsWrapper","dateInput","pickerWrapper","pickerError","numberOfMonths","toMonth","selectedDays","onDayClick","day","range","DateUtils","addDayToRange","fixedWeeks","buttonWrap","newMagnitudeRange","process","minus30days","subtract","sortBy","queryEarthquakeData","params","axios","get","utc","useMapData","calling","mapData","setMapData","startUtc","startOf","endUtc","starttime","endtime","orderby","maxmagnitude","minmagnitude","then","res","LoadingModal","loadingBack","loading","DataTable","tableName","headers","table","headClass","header","indx","orderArrow","isOrdered","asc","name","tableTh","tableOrderable","row","rowI","headI","keyName","tdClass","emptyTable","colSpan","QueryTable","showTable","closeTable","orderBy","tableData","allData","tableState","setTableState","slice","code","magnitude","onMap","smallBtn","details","sortByFunc","prevMapFilter","column","orderByColumn","split","tableModal","useMapViewport","init","useClickState","App","apiData","showDateInput","setShowDateInput","setShowTable","DateRangeSelect","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.3bffc40e.chunk.js","sourcesContent":["export const dateRegex = /^(19|20)\\d{2}-(0[1-9]|1[0-2])-(0[1-9]|1\\d|2\\d|3[01])$/;\n\nexport const magnitudeScaleColors = [\n  '#3288bd',\n  '#59bbc5',\n  '#abdda4',\n  '#84f723',\n  '#ddf84f',\n  '#FCD667',\n  '#f49543',\n  '#fa4c16',\n  '#d53e4f'\n];\n\nexport default {\n  dateRegex\n};\n","import dayjs from 'dayjs';\nimport React from 'react';\n\nimport { DateSelectObj, MagnitudeRange } from '../../hooks/useMapFilter';\n\nimport classes from './FromToInfoBox.module.scss';\n\ntype FromToInfoBoxProps = {\n  dateRange: DateSelectObj;\n  magnitudeRange: MagnitudeRange;\n  onClick: () => void;\n};\n\nconst FromToInfoBox: React.FC<FromToInfoBoxProps> = ({\n  dateRange,\n  magnitudeRange,\n  onClick\n}) => {\n  const { startDate, endDate } = dateRange;\n\n  const onKeyPressHandler = (\n    event: React.KeyboardEvent<HTMLDivElement>\n  ): void => {\n    if (event.key === ' ' || event.key === 'Enter') {\n      onClick();\n    }\n  };\n\n  return (\n    <div\n      className={classes.fromToInfoBox}\n      onClick={onClick}\n      aria-label=\"close modal\"\n      onKeyPress={onKeyPressHandler}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <div className={classes.icon} />\n      <div className={classes.values}>\n        <div className={classes.dateRange}>\n          <div>{`From: ${dayjs(startDate).format('YYYY-MM-DD')}`}</div>\n          <div>{`Till: ${dayjs(endDate).format('YYYY-MM-DD')}`}</div>\n        </div>\n        <div>{`Magnitude: ${\n          !magnitudeRange\n            ? 'OFF'\n            : `min = ${magnitudeRange.min} ~ max = ${magnitudeRange.max}`\n        }`}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default FromToInfoBox;\n","import dayjs from 'dayjs';\nimport React from 'react';\nimport { FeatureProperties } from '../../api/earthquakeData';\n\nimport classes from './HoverToolTip.module.scss';\n\nexport type HoveredFeature = { properties: FeatureProperties };\n\ntype HoverToolTipProps = {\n  hoveredFeature: HoveredFeature;\n  x: number;\n  y: number;\n};\n\nconst HoverToolTip: React.FC<HoverToolTipProps> = ({\n  hoveredFeature,\n  x,\n  y\n}) => (\n  <div className={classes.tooltip} style={{ left: x, top: y }}>\n    <div>{hoveredFeature.properties.place}</div>\n    <div>Magnitude: {hoveredFeature.properties.mag}</div>\n    <div>\n      Date:\n      {` ${dayjs(hoveredFeature.properties.time).format(\n        'YYYY-MM-DD HH:mm:ss'\n      )}`}\n    </div>\n  </div>\n);\n\nexport default HoverToolTip;\n","import React from 'react';\n\nimport classes from './MagnitudeScale.module.scss';\n\ntype MagnitudeScaleProps = {\n  scaleColors: Array<string>;\n};\n\nconst MagnitudeScale: React.FC<MagnitudeScaleProps> = ({ scaleColors }) => {\n  // const [showAll, setShowAll] = useState(true);\n\n  const nrRender = (nr: number): string => {\n    if (nr === 0) return `< ${nr}`;\n    if (nr === scaleColors.length - 1) return `${nr} >`;\n    return `${nr}`;\n  };\n\n  return (\n    <div className={classes.magWrapper}>\n      <div className={classes.magTitle}>Magnitude</div>\n      <div className={classes.magColorsWrap}>\n        {scaleColors.map((color, nr) => (\n          <div key={`color${nr + 1}`} className={classes.magWrap}>\n            <div\n              style={{ backgroundColor: color }}\n              className={classes.magColor}\n            />\n            <div className={classes.magNr}>{nrRender(nr)}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default MagnitudeScale;\n","import React from 'react';\n\nimport classes from './TextLink.module.scss';\n\ntype TextLinkProps = {\n  url: string;\n  children: React.ReactNode;\n  target?: '_new' | '_blank' | '_self';\n};\n\nconst TextLink: React.FC<TextLinkProps> = ({ url, children, target }) => {\n  return (\n    <a href={url} className={classes.textLink} target={target || '_self'}>\n      {children}\n    </a>\n  );\n};\n\nexport default TextLink;\n","import React from 'react';\nimport { magnitudeScaleColors } from '../constants';\n\nimport classes from './MagnitudeComp.module.scss';\n\nexport interface MagnitudeCompProps {\n  mag: number;\n}\n\nconst MagnitudeComp: React.FC<MagnitudeCompProps> = ({ mag }) => (\n  <div className={classes.magWrap}>\n    <div\n      className={classes.magColor}\n      style={{ backgroundColor: magnitudeScaleColors[Math.floor(mag)] }}\n    />\n    {Math.round(mag * 10) / 10}\n  </div>\n);\n\nexport default MagnitudeComp;\n","import dayjs from 'dayjs';\nimport React from 'react';\nimport { Popup } from 'react-map-gl';\n\nimport { QueryFeatureObj } from '../../api/earthquakeData';\n\nimport './PopUpToolTip.scss';\nimport classes from './PopUpToolTip.module.scss';\nimport TextLink from '../buttons/TextLink';\nimport MagnitudeComp from '../MagnitudeComp';\n\ntype PopUpToolTipProps = {\n  feature: QueryFeatureObj;\n  lng: number;\n  lat: number;\n  onClose: () => void;\n};\n\nconst PopUpToolTip: React.FC<PopUpToolTipProps> = ({\n  feature,\n  lng,\n  lat,\n  onClose\n}) => (\n  <Popup\n    tipSize={5}\n    anchor=\"bottom\"\n    longitude={lng}\n    latitude={lat}\n    closeOnClick={false}\n    onClose={onClose}\n  >\n    <div className={classes.popUpDescription}>\n      <div className={classes.title}>{feature.properties.place}</div>\n      <div className={classes.mag}>\n        <div>Magnitude: </div>\n        <MagnitudeComp mag={feature.properties.mag} />\n      </div>\n      <div>\n        Date:\n        {` ${dayjs(feature.properties.time).format('YYYY-MM-DD HH:mm:ss')}`}\n      </div>\n      <div>\n        <TextLink url={feature.properties.url} target=\"_new\">\n          More details\n        </TextLink>\n      </div>\n    </div>\n  </Popup>\n);\n\nexport default PopUpToolTip;\n","import React from 'react';\n\nimport viewTable from '../../svg/view_list-24px.svg';\n\nimport classes from './ToggleTable.module.scss';\n\nexport interface ToggleTableProps {\n  onClick: () => void;\n}\n\nconst ToggleTable: React.SFC<ToggleTableProps> = ({ onClick }) => {\n  const onKeyPressHandler = (\n    event: React.KeyboardEvent<HTMLDivElement>\n  ): void => {\n    if (event.key === ' ' || event.key === 'Enter') {\n      onClick();\n    }\n  };\n\n  return (\n    <div\n      className={classes.toggleTable}\n      onClick={onClick}\n      aria-label=\"close modal\"\n      onKeyPress={onKeyPressHandler}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <img\n        src={viewTable}\n        alt=\"show table\"\n        className={classes.toggleTableImg}\n      />\n      <div>Show Table</div>\n    </div>\n  );\n};\n\nexport default ToggleTable;\n","import React, { useState } from 'react';\nimport ReactMapGL, {\n  NavigationControl,\n  FullscreenControl,\n  ScaleControl,\n  GeolocateControl,\n  Source,\n  Layer,\n  PointerEvent\n} from 'react-map-gl';\nimport { QueryFeatureObj, QueryResponse } from '../../api/earthquakeData';\nimport { magnitudeScaleColors } from '../../constants';\nimport { UseClickState } from '../../hooks/useClickState';\nimport { MapFilterObj } from '../../hooks/useMapFilter';\nimport { ViewportObj } from '../../hooks/useMapViewport';\nimport FromToInfoBox from './FromToInfoBox';\n\nimport HoverToolTip from './HoverToolTip';\nimport MagnitudeScale from './MagnitudeScale';\n\nimport classes from './MapArea.module.scss';\nimport PopUpToolTip from './PopUpToolTip';\nimport ToggleTable from './ToggleTable';\n\ntype MapAreaProps = {\n  viewport: ViewportObj;\n  clickStateObj: UseClickState;\n  setViewport: React.Dispatch<React.SetStateAction<ViewportObj>>;\n  mapsApiKey: string;\n  geoData: QueryResponse | null;\n  mapFilter: MapFilterObj;\n  openDateSelect: () => void;\n  openDateTable: () => void;\n};\n\nconst MapArea: React.FC<MapAreaProps> = ({\n  viewport,\n  clickStateObj,\n  setViewport,\n  mapsApiKey,\n  geoData,\n  mapFilter,\n  openDateSelect,\n  openDateTable\n}) => {\n  const [hoverState, setHoverState] = useState({\n    hoveredFeature: null,\n    x: 0,\n    y: 0\n  } as { hoveredFeature: null | QueryFeatureObj; x: number; y: number });\n  const [clickState, setClickState] = clickStateObj;\n\n  const onHoverMap = (event: PointerEvent): void => {\n    const {\n      features,\n      srcEvent: { offsetX, offsetY }\n    } = event;\n\n    const hoveredFeature: QueryFeatureObj =\n      features && features.find((f) => f.layer.id === 'earthquake');\n\n    if (!clickState.clickedFeature) {\n      setHoverState({ hoveredFeature, x: offsetX, y: offsetY });\n    }\n  };\n\n  const onClickMap = (event: PointerEvent): void => {\n    const { features } = event;\n\n    const clickedFeature: QueryFeatureObj =\n      features && features.find((f) => f.layer.id === 'earthquake');\n\n    setHoverState({ hoveredFeature: null, x: 0, y: 0 });\n\n    if (clickedFeature) {\n      setClickState({\n        clickedFeature,\n        lng: clickedFeature.geometry.coordinates[0],\n        lat: clickedFeature.geometry.coordinates[1]\n      });\n      setViewport((prev) => ({\n        longitude: clickedFeature.geometry.coordinates[0],\n        latitude: clickedFeature.geometry.coordinates[1],\n        zoom: prev.zoom < 5 ? 5 : prev.zoom\n      }));\n    } else {\n      setClickState({ clickedFeature: null, lng: 0, lat: 0 });\n    }\n  };\n\n  const calcCircleRadius = (zoom: number): number => {\n    if (zoom < 5) {\n      return 5;\n    }\n\n    return (zoom / 5) * 6;\n  };\n\n  const { hoveredFeature } = hoverState;\n  const hoverX = hoverState.x;\n  const hoverY = hoverState.y;\n  const { clickedFeature } = clickState;\n  return (\n    <div style={{ flex: '1 1 auto' }}>\n      <ReactMapGL\n        mapboxApiAccessToken={mapsApiKey}\n        width=\"100%\"\n        height=\"100%\"\n        latitude={viewport.latitude}\n        longitude={viewport.longitude}\n        zoom={viewport.zoom}\n        onViewportChange={(nextViewport): void => setViewport(nextViewport)}\n        onHover={onHoverMap}\n        onClick={onClickMap}\n        interactiveLayerIds={geoData ? ['earthquake'] : undefined}\n      >\n        <div className={classes.geoLocateStyle}>\n          <GeolocateControl />\n        </div>\n        <div className={classes.fullscreenControlStyle}>\n          <FullscreenControl />\n        </div>\n        <div className={classes.navStyle}>\n          <NavigationControl showCompass={false} />\n        </div>\n        <div className={classes.scaleControlStyle}>\n          <ScaleControl />\n        </div>\n        {geoData ? (\n          <>\n            <Source type=\"geojson\" data={geoData}>\n              <Layer\n                type=\"circle\"\n                id=\"earthquake\"\n                source=\"Point\"\n                paint={{\n                  'circle-color': {\n                    property: 'mag',\n                    stops: [\n                      [0, magnitudeScaleColors[0]],\n                      [1, magnitudeScaleColors[1]],\n                      [2, magnitudeScaleColors[2]],\n                      [3, magnitudeScaleColors[3]],\n                      [4, magnitudeScaleColors[4]],\n                      [5, magnitudeScaleColors[5]],\n                      [6, magnitudeScaleColors[6]],\n                      [7, magnitudeScaleColors[7]],\n                      [8, magnitudeScaleColors[8]]\n                    ]\n                  },\n                  'circle-opacity': 0.8,\n                  'circle-radius': calcCircleRadius(viewport.zoom)\n                }}\n              />\n            </Source>\n            {hoveredFeature ? (\n              <HoverToolTip\n                hoveredFeature={hoveredFeature}\n                x={hoverX}\n                y={hoverY}\n              />\n            ) : null}\n            {clickedFeature ? (\n              <PopUpToolTip\n                lat={clickState.lat}\n                lng={clickState.lng}\n                feature={clickedFeature}\n                onClose={(): void =>\n                  setClickState({ clickedFeature: null, lat: 0, lng: 0 })\n                }\n              />\n            ) : null}\n            <FromToInfoBox\n              onClick={openDateSelect}\n              dateRange={mapFilter.dateRange}\n              magnitudeRange={mapFilter.magnitudeRange}\n            />\n            <ToggleTable onClick={openDateTable} />\n            <MagnitudeScale scaleColors={magnitudeScaleColors} />\n          </>\n        ) : null}\n      </ReactMapGL>\n    </div>\n  );\n};\nexport default MapArea;\n","import React, { useEffect, useRef } from 'react';\n\nimport classes from './InputComp.module.scss';\n\ntype InputCompProps = {\n  type: 'text' | 'date' | 'number';\n  id: string;\n  value: number | string;\n  label?: string;\n  hasError?: boolean;\n  placeholder?: string;\n  className?: string;\n  disabled?: boolean;\n  required?: boolean;\n  autoFocus?: boolean;\n  max?: string | number;\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst InputComp: React.FC<InputCompProps> = ({\n  type,\n  placeholder,\n  id,\n  className,\n  required,\n  value,\n  max,\n  onChange,\n  disabled,\n  autoFocus,\n  hasError,\n  label\n}) => {\n  const focusRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (focusRef && focusRef.current) {\n      focusRef.current.focus();\n    }\n  }, []);\n\n  return (\n    <div className={classes.inputWrap}>\n      {label ? (\n        <div className={classes.label}>\n          <label htmlFor={id}>{label}</label>\n        </div>\n      ) : null}\n      <input\n        disabled={disabled}\n        required={required}\n        ref={autoFocus ? focusRef : null}\n        type={type}\n        placeholder={placeholder}\n        id={id}\n        className={`${classes.input} ${\n          hasError ? classes.inputError : ''\n        } ${className}`}\n        value={value}\n        max={max}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nexport default InputComp;\n","import React from 'react';\n\nimport classes from './ButtonComp.module.scss';\n\nexport interface ButtonCompProps {\n  children: React.ReactNode;\n  id: string;\n  onClick?: () => void;\n  className?: string;\n  disabled?: boolean;\n  secondary?: boolean;\n}\n\nconst ButtonComp: React.FC<ButtonCompProps> = ({\n  children,\n  onClick,\n  id,\n  disabled,\n  className,\n  secondary\n}) => {\n  return (\n    <button\n      type=\"button\"\n      id={id}\n      onClick={onClick}\n      disabled={disabled}\n      className={`${\n        classes[secondary ? 'buttonSecondary' : 'button']\n      } ${className}`}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default ButtonComp;\n","import React from 'react';\nimport { Range } from 'rc-slider';\nimport Switch from 'rc-switch';\n\nimport InputComp from './InputComp';\n\nimport '../../../node_modules/rc-slider/assets/index.css';\nimport '../../../node_modules/rc-switch/assets/index.css';\nimport classes from './RangeSlider.module.scss';\n\ntype SliderRangeValue = {\n  inputMin: number;\n  inputMax: number;\n  value: number[];\n  isOn: boolean;\n};\n\nexport interface RangeSliderProps {\n  min: number;\n  max: number;\n  steps: number;\n  value: SliderRangeValue;\n  onSliderChange: React.Dispatch<React.SetStateAction<SliderRangeValue>>;\n}\n\nconst RangeSlider: React.FC<RangeSliderProps> = ({\n  min,\n  max,\n  value,\n  onSliderChange,\n  steps\n}) => {\n  const handleSliderChange = (val: number[]): void => {\n    onSliderChange({\n      inputMin: val[0],\n      inputMax: val[1],\n      value: val,\n      isOn: true\n    });\n  };\n\n  const changeInput = (type: 'inputMin' | 'inputMax') => (\n    event: React.ChangeEvent<HTMLInputElement>\n  ): void => {\n    const val = +event.target.value;\n    onSliderChange((prev) => {\n      const newValue = [...prev.value];\n      const index = type === 'inputMin' ? 0 : 1;\n      newValue[index] = val;\n      return {\n        ...prev,\n        [type]: val,\n        value: newValue,\n        isOn: true\n      };\n    });\n  };\n\n  const onChangeSwitch = (val: boolean): void => {\n    onSliderChange((prev) => ({\n      ...prev,\n      isOn: val\n    }));\n  };\n\n  return (\n    <>\n      <div className={classes.inputs}>\n        <Switch\n          className={classes.switch}\n          checked={value.isOn}\n          onChange={onChangeSwitch}\n          onClick={onChangeSwitch}\n        />\n        <InputComp\n          disabled={!value.isOn}\n          label=\"min\"\n          type=\"number\"\n          id=\"rangeMin\"\n          value={value.inputMin}\n          className={classes.rangeInput}\n          onChange={changeInput('inputMin')}\n        />\n        <InputComp\n          disabled={!value.isOn}\n          label=\"max\"\n          type=\"number\"\n          id=\"rangeMax\"\n          value={value.inputMax}\n          className={classes.rangeInput}\n          onChange={changeInput('inputMax')}\n        />\n      </div>\n      <Range\n        disabled={!value.isOn}\n        min={min}\n        max={max}\n        step={steps}\n        allowCross={false}\n        value={value.value}\n        onChange={handleSliderChange}\n      />\n    </>\n  );\n};\n\nexport default RangeSlider;\n","import { useState, useEffect } from 'react';\n\nconst useDelayUnmount = (\n  delay: number,\n  show: boolean\n): { render: boolean; animate: boolean } => {\n  const [render, setRender] = useState(show);\n  const [animate, setAnimate] = useState(!show);\n\n  useEffect(() => {\n    if (show) {\n      setRender(true);\n      setTimeout(() => {\n        setAnimate(true);\n      }, 5);\n    } else {\n      setAnimate(false);\n      setTimeout(() => {\n        setRender(false);\n      }, delay);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [show]);\n\n  return { render, animate };\n};\n\nexport default useDelayUnmount;\n","import React from 'react';\n\nimport classes from './Backdrop.module.scss';\n\ntype BackdropProps = {\n  show: boolean;\n  clicked?: () => void;\n  className?: string;\n};\n\nconst Backdrop: React.FC<BackdropProps> = ({ show, clicked, className }) => {\n  const onKeyPressHandler = (\n    event: React.KeyboardEvent<HTMLDivElement>\n  ): void => {\n    if (\n      (event.key === 'Escape' || event.key === ' ' || event.key === 'Enter') &&\n      clicked\n    ) {\n      clicked();\n    }\n  };\n\n  return (\n    <>\n      {show ? (\n        <div\n          aria-label=\"close modal\"\n          className={[classes.Backdrop, ...(className ? [className] : [])].join(\n            ' '\n          )}\n          onKeyPress={onKeyPressHandler}\n          onClick={clicked}\n          role=\"button\"\n          tabIndex={0}\n        />\n      ) : null}\n    </>\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport useDelayUnmount from '../../hooks/useDelayUnmount';\nimport Backdrop from './Backdrop';\n\nimport classes from './Modal.module.scss';\n\ntype ModalProps = {\n  show: boolean;\n  clickToClose: () => void;\n  children: React.ReactNode;\n  className?: string;\n};\n\nconst Modal: React.FC<ModalProps> = ({\n  show,\n  clickToClose,\n  children,\n  className\n}) => {\n  const { render, animate } = useDelayUnmount(305, show);\n\n  return render ? (\n    <>\n      <Backdrop show={animate} clicked={clickToClose} />\n      <div\n        className={`${classes.modal} ${className || classes.defaultModal}`}\n        style={{\n          transform: animate ? 'translateY(0)' : 'translateY(-100vh)',\n          opacity: animate ? '1' : '0'\n        }}\n      >\n        {children}\n      </div>\n    </>\n  ) : null;\n};\n\nexport default Modal;\n","import React, { useState } from 'react';\nimport DayPicker, { DateUtils } from 'react-day-picker';\nimport dayjs from 'dayjs';\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore';\nimport isBetween from 'dayjs/plugin/isBetween';\n\nimport { MagnitudeRange, UseMapFilterObj } from '../../hooks/useMapFilter';\nimport InputComp from './InputComp';\n\n// default day-picker css\nimport '../../../node_modules/react-day-picker/lib/style.css';\n// overwrite day-picker css\nimport './dayPicker.scss';\n// component styles\nimport classes from './DateRangeSelect.module.scss';\nimport ButtonComp from '../buttons/ButtonComp';\nimport { dateRegex } from '../../constants';\nimport RangeSlider from './RangeSlider';\nimport Modal from './Modal';\n\ndayjs.extend(isSameOrBefore);\ndayjs.extend(isBetween);\n\ntype HasErrorState = {\n  hasError: boolean;\n  errorMsg: null | string;\n  startDateError: boolean;\n  endDateError: boolean;\n};\n\ntype DateSelectProps = {\n  useMapFilter: UseMapFilterObj;\n  handleClose: () => void;\n  show: boolean;\n};\n\nconst DateSelect: React.FC<DateSelectProps> = ({\n  useMapFilter,\n  handleClose,\n  show\n}) => {\n  const today = new Date();\n  const todayDayJs = dayjs().endOf('day');\n  const {\n    mapFilter: { dateRange, magnitudeRange },\n    setMapFilter\n  } = useMapFilter;\n  const [sliderVal, setSlider] = useState({\n    inputMin: magnitudeRange && magnitudeRange.min ? magnitudeRange.min : 1,\n    inputMax: magnitudeRange && magnitudeRange.max ? magnitudeRange.max : 10,\n    value: [\n      magnitudeRange && magnitudeRange.min ? magnitudeRange.min : 1,\n      magnitudeRange && magnitudeRange.max ? magnitudeRange.max : 10\n    ],\n    isOn: !!magnitudeRange\n  });\n  const [inputError, setError] = useState({\n    hasError: false,\n    errorMsg: null,\n    startDateError: false,\n    endDateError: false\n  } as HasErrorState);\n\n  const [inputs, setInputs] = useState({\n    startDate: dayjs(dateRange.startDate).format('YYYY-MM-DD'),\n    endDate: dayjs(dateRange.endDate).format('YYYY-MM-DD')\n  });\n  const [picker, setPicker] = useState({\n    from: dateRange.startDate,\n    to: dateRange.endDate\n  });\n\n  const isValidDateRange = (\n    start: string | Date,\n    end: string | Date,\n    current?: Date | string\n  ): string | null => {\n    let startDayJs = dayjs(start);\n    let endDayJs = dayjs(end);\n    if (typeof start === 'string') {\n      if (!dateRegex.test(start)) return 'Error: invalid From Date';\n      startDayJs = dayjs(start, 'YYYY-MM-DD');\n    }\n    if (typeof end === 'string') {\n      if (!dateRegex.test(end)) return 'Error: invalid From To';\n      endDayJs = dayjs(end, 'YYYY-MM-DD');\n    }\n\n    const dayDiff = endDayJs.diff(startDayJs, 'day');\n    const currentDayJs =\n      typeof current === 'string'\n        ? dayjs(current, 'YYYY-MM-DD')\n        : dayjs(current);\n\n    if (current && !currentDayJs.isSameOrBefore(todayDayJs)) {\n      // error not in the future\n      return 'Error: Future dates not allowed';\n    }\n\n    if (dayDiff > 30) {\n      return 'Error: Max range is 30 days';\n    }\n    if (dayDiff < 0) {\n      return 'Error: End date can not be before the Start date';\n    }\n\n    return null;\n  };\n\n  const handleDayClick = (day: Date): void => {\n    const range = DateUtils.addDayToRange(day, {\n      ...picker\n    });\n    const errorMsg = isValidDateRange(range.from, range.to, day);\n\n    setInputs({\n      startDate: dayjs(range.from).format('YYYY-MM-DD'),\n      endDate: dayjs(range.to).format('YYYY-MM-DD')\n    });\n    setPicker({ ...range });\n\n    setError((prev) => ({ ...prev, hasError: !!errorMsg, errorMsg }));\n  };\n\n  const changeInput = (type: 'startDate' | 'endDate') => (\n    event: React.ChangeEvent<HTMLInputElement>\n  ): void => {\n    let errorMsg: null | string = null;\n    const val = event.target.value;\n    setInputs((prev) => ({ ...prev, [type]: val }));\n\n    const validDateStr = dateRegex.test(val);\n\n    // TODO: add manual input validation\n    if (validDateStr) {\n      let otherType: null | string = null;\n\n      const start = type === 'startDate' ? val : inputs.startDate;\n      const end = type === 'endDate' ? val : inputs.endDate;\n      errorMsg = isValidDateRange(start, end, val);\n      if (errorMsg) {\n        const startDateInput = type === 'startDate' ? val : inputs.startDate;\n        const endDateInput = type === 'endDate' ? val : inputs.endDate;\n        const errorMsgInput = isValidDateRange(\n          startDateInput,\n          endDateInput,\n          val\n        );\n        if (!errorMsgInput) {\n          errorMsg = errorMsgInput;\n          otherType = type === 'startDate' ? 'endDate' : 'startDate';\n        }\n      }\n\n      setError((prev) => ({\n        ...prev,\n        [`${type}Error`]: !!errorMsg,\n        ...(otherType ? { [`${otherType}Error`]: false } : {}),\n        hasError: false,\n        errorMsg\n      }));\n    } else {\n      errorMsg = 'Error: please enter a valid date';\n      setError((prev) => ({\n        ...prev,\n        [`${type}Error`]: true,\n        errorMsg\n      }));\n    }\n\n    const pickerKey = type === 'startDate' ? 'from' : 'to';\n    setPicker((prev) => ({\n      ...prev,\n      [pickerKey]: errorMsg ? null : dayjs(val, 'YYYY-MM-DD').toDate()\n    }));\n  };\n\n  const handleSubmit = (): void => {\n    handleClose();\n    let newMagnitudeRange: MagnitudeRange = null;\n    if (sliderVal.isOn) {\n      newMagnitudeRange = {\n        min: sliderVal.value[0],\n        max: sliderVal.value[1]\n      };\n    }\n    setMapFilter((prev) => ({\n      ...prev,\n      dateRange: {\n        startDate: dayjs(inputs.startDate, 'YYYY-DD-MM').toDate(),\n        endDate: dayjs(inputs.endDate, 'YYYY-DD-MM').toDate()\n      },\n      magnitudeRange: newMagnitudeRange\n    }));\n  };\n\n  const { from, to } = picker;\n  const modifiers = { start: from, end: to };\n  return (\n    <Modal className={classes.modal} show={show} clickToClose={handleClose}>\n      <div className={classes.dateRangeWrapper}>\n        <div className={classes.title}>Magnitude filter</div>\n        <div className={classes.magRangeWrap}>\n          <RangeSlider\n            min={1}\n            max={10}\n            value={sliderVal}\n            steps={0.5}\n            onSliderChange={setSlider}\n          />\n        </div>\n        <div className={classes.title}>Date Range</div>\n        <div className={classes.inputsWrapper}>\n          <InputComp\n            label=\"From\"\n            required\n            autoFocus\n            type=\"text\"\n            placeholder=\"YYYY-MM-DD\"\n            id=\"inputStart\"\n            className={classes.dateInput}\n            hasError={inputError.startDateError}\n            value={inputs.startDate}\n            max={todayDayJs.format('YYYY-MM-DD')}\n            onChange={changeInput('startDate')}\n          />\n          <InputComp\n            label=\"To\"\n            required\n            type=\"text\"\n            placeholder=\"YYYY-MM-DD\"\n            id=\"inputEnd\"\n            hasError={inputError.endDateError}\n            className={classes.dateInput}\n            value={inputs.endDate}\n            max={todayDayJs.format('YYYY-MM-DD')}\n            onChange={changeInput('endDate')}\n          />\n        </div>\n        <div className={classes.pickerWrapper}>\n          <div className={classes.pickerError}>\n            {inputError.errorMsg ? inputError.errorMsg : '\\u00A0'}\n          </div>\n          <DayPicker\n            className={`selectable${inputError.hasError ? 'Error' : ''}`}\n            numberOfMonths={2}\n            toMonth={today}\n            selectedDays={[from, { from, to }]}\n            modifiers={modifiers}\n            onDayClick={handleDayClick}\n            fixedWeeks\n          />\n        </div>\n        <div className={classes.buttonWrap}>\n          <ButtonComp\n            onClick={handleSubmit}\n            disabled={!!isValidDateRange(inputs.startDate, inputs.endDate)}\n            id=\"submitDates\"\n          >\n            Submit\n          </ButtonComp>\n          <ButtonComp secondary onClick={handleClose} id=\"cancelDates\">\n            Cancel\n          </ButtonComp>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default DateSelect;\n","export const mapsApiKey = `${process.env.REACT_APP_MAPBOX_KEY}`;\n\nexport default { mapsApiKey };\n","import dayjs from 'dayjs';\nimport { useState } from 'react';\nimport { OrderByQuery } from '../api/earthquakeData';\n\nexport type DateSelectObj = { startDate: Date; endDate: Date };\nexport type MagnitudeRange = { min: number; max: number } | null;\nexport type MapFilterObj = {\n  dateRange: DateSelectObj;\n  sortBy: OrderByQuery;\n  magnitudeRange: MagnitudeRange;\n};\n\nexport type SetMapFilter = React.Dispatch<React.SetStateAction<MapFilterObj>>;\n\nexport type UseMapFilterObj = {\n  mapFilter: MapFilterObj;\n  setMapFilter: SetMapFilter;\n};\n\nconst useMapFilter = (): UseMapFilterObj => {\n  const today = new Date();\n  const minus30days = dayjs().subtract(30, 'day').toDate();\n  const [mapFilter, setMapFilter] = useState({\n    dateRange: {\n      startDate: minus30days,\n      endDate: today\n    },\n    sortBy: 'time',\n    magnitudeRange: null\n  } as MapFilterObj);\n\n  return { mapFilter, setMapFilter };\n};\n\nexport default useMapFilter;\n","import axios, { AxiosResponse } from 'axios';\nimport { Feature, Point } from 'geojson';\n\nexport type FeatureProperties = {\n  alert: string;\n  cdi: string;\n  code: string;\n  detail: string;\n  dmin: number;\n  felt: string;\n  gap: number;\n  ids: string;\n  mag: number;\n  magType: string;\n  mmi: string;\n  net: string;\n  nst: string;\n  place: string;\n  rms: number;\n  sig: number;\n  sources: string;\n  status: string;\n  time: number;\n  title: string;\n  tsunami: number;\n  type: string;\n  types: string;\n  tz: string;\n  updated: number;\n  url: string;\n};\n\nexport type QueryFeatureObj = Feature<Point, FeatureProperties>;\n\nexport type OrderByQuery = 'time' | 'time-asc' | 'magnitude' | 'magnitude-asc';\n\nexport type QueryResponse = GeoJSON.FeatureCollection<Point, FeatureProperties>;\n\nexport const queryEarthquakeData = (params: {\n  format: 'geojson' | 'csv' | 'kml' | 'quakeml' | 'text' | 'xml';\n  starttime?: string;\n  endtime?: string;\n  orderby?: OrderByQuery;\n  minmagnitude?: number;\n  maxmagnitude?: number;\n}): Promise<AxiosResponse<QueryResponse>> =>\n  axios.get('https://earthquake.usgs.gov/fdsnws/event/1/query', { params });\n\nexport default { queryEarthquakeData };\n","import dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport { useEffect, useState } from 'react';\nimport { queryEarthquakeData, QueryResponse } from '../api/earthquakeData';\n\nimport { MapFilterObj } from './useMapFilter';\n\ndayjs.extend(utc);\n\nexport type UseMapGeoData = {\n  data: QueryResponse | null;\n  calling: boolean;\n};\n\nconst useMapData = ({\n  dateRange,\n  sortBy,\n  magnitudeRange\n}: MapFilterObj): UseMapGeoData => {\n  const [mapData, setMapData] = useState({\n    data: null,\n    calling: false\n  } as UseMapGeoData);\n\n  useEffect(() => {\n    // fetch data\n    let current = true;\n    setMapData((prev) => ({\n      ...prev,\n      calling: true\n    }));\n\n    const { startDate, endDate } = dateRange;\n\n    const startUtc = dayjs(startDate)\n      .startOf('day')\n      .utc()\n      .format('YYYY-MM-DDTHH:mm:ss');\n    const endUtc = dayjs(endDate)\n      .endOf('day')\n      .utc()\n      .format('YYYY-MM-DDTHH:mm:ss');\n    queryEarthquakeData({\n      format: 'geojson',\n      ...(startDate ? { starttime: startUtc } : {}),\n      ...(endDate ? { endtime: endUtc } : {}),\n      ...(sortBy ? { orderby: sortBy } : { orderby: 'time' }),\n      ...(magnitudeRange ? { maxmagnitude: magnitudeRange.max } : {}),\n      ...(magnitudeRange ? { minmagnitude: magnitudeRange.min } : {})\n    }).then((res) => {\n      if (current) {\n        setMapData({\n          calling: false,\n          data: res.data\n        });\n      }\n    });\n    return (): void => {\n      current = false;\n    };\n  }, [dateRange, sortBy, magnitudeRange]);\n\n  return mapData;\n};\n\nexport default useMapData;\n","import React from 'react';\nimport useDelayUnmount from '../../hooks/useDelayUnmount';\nimport Backdrop from './Backdrop';\n\nimport classes from './LoadingModal.module.scss';\n\ntype LoadingModalProps = {\n  show: boolean;\n};\n\nconst LoadingModal: React.FC<LoadingModalProps> = ({ show }) => {\n  const { render, animate } = useDelayUnmount(305, show);\n\n  return render ? (\n    <>\n      <Backdrop show={animate} className={classes.loadingBack} />\n      <div\n        className={classes.modal}\n        style={{\n          opacity: animate ? '1' : '0'\n        }}\n      >\n        <div className={classes.loading} />\n      </div>\n    </>\n  ) : null;\n};\n\nexport default LoadingModal;\n","import React from 'react';\n\nimport classes from './DataTable.module.scss';\n\nexport type TableDataArr = Array<{\n  name: string;\n  [keyName: string]: string | number | JSX.Element | boolean | null;\n}>;\n\ntype DataTableProps = {\n  tableName: string;\n  headers: Array<{\n    name: string;\n    keyName: string;\n    onClick?: () => void;\n    isOrdered?: boolean;\n    asc?: boolean;\n  }>;\n  data: TableDataArr | null;\n};\n\nconst DataTable: React.FC<DataTableProps> = ({ tableName, headers, data }) => {\n  return (\n    <table id={tableName} className={classes.table}>\n      <thead>\n        <tr className={classes.headClass}>\n          {headers.map((header, indx) => {\n            let orderArrow = '';\n            if (header.isOrdered && header.asc) {\n              orderArrow = ' \\u25B2';\n            } else if (header.isOrdered) {\n              orderArrow = ' \\u25BC';\n            }\n\n            return (\n              <th\n                key={`tableHead_${header.name}${indx + 1}`}\n                className={[\n                  classes.tableTh,\n                  ...(header.onClick ? [classes.tableOrderable] : [])\n                ].join(' ')}\n                onClick={header.onClick}\n              >\n                {`${header.name}${orderArrow}`}\n              </th>\n            );\n          })}\n        </tr>\n      </thead>\n      <tbody>\n        {!data || data.length === 0 ? (\n          <tr>\n            <td className={classes.emptyTable} colSpan={headers.length}>\n              No Data found\n            </td>\n          </tr>\n        ) : (\n          data.map((row, rowI: number) => (\n            <tr key={`row_${rowI + 1}`}>\n              {headers.map((header, headI) => (\n                <td\n                  key={`tableCell_${rowI + 1}${headI + 1}${header.keyName}`}\n                  className={classes.tdClass}\n                >\n                  {row[header.keyName]}\n                </td>\n              ))}\n            </tr>\n          ))\n        )}\n      </tbody>\n    </table>\n  );\n};\n\nexport default DataTable;\n","import dayjs from 'dayjs';\nimport { Feature, Point } from 'geojson';\nimport React, { useEffect, useState } from 'react';\n\nimport {\n  FeatureProperties,\n  OrderByQuery,\n  QueryResponse\n} from '../../api/earthquakeData';\nimport { SetClickState } from '../../hooks/useClickState';\nimport { MapFilterObj, SetMapFilter } from '../../hooks/useMapFilter';\nimport { ViewportObj } from '../../hooks/useMapViewport';\n\nimport ButtonComp from '../buttons/ButtonComp';\nimport TextLink from '../buttons/TextLink';\nimport MagnitudeComp from '../MagnitudeComp';\nimport Modal from '../UI/Modal';\nimport DataTable, { TableDataArr } from './DataTable';\n\nimport classes from './QueryTable.module.scss';\n\ntype QueryTableProps = {\n  setClickState: SetClickState;\n  showTable: boolean;\n  geoData: QueryResponse | null;\n  setViewport: React.Dispatch<React.SetStateAction<ViewportObj>>;\n  closeTable: () => void;\n  orderBy: OrderByQuery;\n  setMapFilter: SetMapFilter;\n};\n\ntype QueryFeature = Array<Feature<Point, FeatureProperties>>;\n\nconst QueryTable: React.FC<QueryTableProps> = ({\n  setClickState,\n  showTable,\n  geoData,\n  setViewport,\n  closeTable,\n  orderBy,\n  setMapFilter\n}) => {\n  const [tableState, setTableState] = useState({\n    tableData: null,\n    allData: null\n  } as {\n    tableData: null | TableDataArr;\n    allData: null | QueryFeature;\n  });\n\n  const makeTableData = (features: QueryFeature): TableDataArr => {\n    return features.slice(0, 100).map((row) => ({\n      ...row.properties,\n      name: `${row.properties.code}${row.properties.time}`,\n      time: dayjs(row.properties.time).format('YYYY-MM-DD HH:mm:ss'),\n      magnitude: <MagnitudeComp mag={row.properties.mag} />,\n      onMap: (\n        <ButtonComp\n          id={`tableMap${row.properties.code}${row.properties.time}`}\n          className={classes.smallBtn}\n          onClick={(): void => {\n            closeTable();\n            setClickState({\n              clickedFeature: row,\n              lng: row.geometry.coordinates[0],\n              lat: row.geometry.coordinates[1]\n            });\n            setViewport((prev) => ({\n              longitude: row.geometry.coordinates[0],\n              latitude: row.geometry.coordinates[1],\n              zoom: prev.zoom < 5 ? 5 : prev.zoom\n            }));\n          }}\n        >\n          Show on Map\n        </ButtonComp>\n      ),\n      details: (\n        <TextLink url={row.properties.url} target=\"_new\">\n          More details\n        </TextLink>\n      )\n    }));\n  };\n\n  useEffect(() => {\n    if (geoData?.features) {\n      const allData = geoData?.features;\n      const tableData = makeTableData(allData);\n      setTableState({\n        allData,\n        tableData\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [geoData]);\n\n  const sortByFunc = (\n    prevMapFilter: MapFilterObj,\n    column: 'time' | 'magnitude'\n  ): OrderByQuery => {\n    const orderByColumn = prevMapFilter.sortBy.split('-')[0] as\n      | 'time'\n      | 'magnitude';\n    const asc = prevMapFilter.sortBy.split('-')[1];\n\n    if (orderByColumn === column && asc) {\n      return orderByColumn;\n    }\n\n    if (orderByColumn === column) {\n      return `${orderByColumn}-asc` as 'time-asc' | 'magnitude-asc';\n    }\n\n    return column;\n  };\n\n  const orderByColumn = orderBy.split('-')[0];\n  const asc = orderBy.split('-')[1];\n\n  return (\n    <Modal\n      className={classes.tableModal}\n      show={showTable}\n      clickToClose={closeTable}\n    >\n      <DataTable\n        tableName=\"queryTable\"\n        headers={[\n          {\n            name: 'Date',\n            keyName: 'time',\n            onClick: (): void =>\n              setMapFilter((prev) => ({\n                ...prev,\n                sortBy: sortByFunc(prev, 'time')\n              })),\n            isOrdered: orderByColumn === 'time',\n            asc: orderByColumn === 'time' && !!asc\n          },\n          {\n            name: 'Magnitude',\n            keyName: 'magnitude',\n            onClick: (): void =>\n              setMapFilter((prev) => ({\n                ...prev,\n                sortBy: sortByFunc(prev, 'magnitude')\n              })),\n            isOrdered: orderByColumn === 'magnitude',\n            asc: orderByColumn === 'magnitude' && !!asc\n          },\n          { name: 'Location', keyName: 'place' },\n          { name: 'On Map', keyName: 'onMap' },\n          { name: 'Details', keyName: 'details' }\n        ]}\n        data={tableState.tableData}\n      />\n    </Modal>\n  );\n};\n\nexport default QueryTable;\n","import { useState } from 'react';\n\nexport type ViewportObj = {\n  latitude: number;\n  longitude: number;\n  zoom: number;\n};\n\nexport type UseMapViewport = [\n  ViewportObj,\n  React.Dispatch<React.SetStateAction<ViewportObj>>\n];\n\nconst useMapViewport = (init: ViewportObj): UseMapViewport => {\n  const [viewport, setViewport] = useState(init);\n\n  return [viewport, setViewport];\n};\n\nexport default useMapViewport;\n","import { useState } from 'react';\nimport { QueryFeatureObj } from '../api/earthquakeData';\n\nexport type ClickStateObj = {\n  clickedFeature: null | QueryFeatureObj;\n  lng: number;\n  lat: number;\n};\n\nexport type SetClickState = React.Dispatch<React.SetStateAction<ClickStateObj>>;\n\nexport type UseClickState = [ClickStateObj, SetClickState];\n\nconst useClickState = (init: ClickStateObj): UseClickState => {\n  const [clickState, setClickState] = useState({ ...init } as ClickStateObj);\n\n  return [clickState, setClickState];\n};\n\nexport default useClickState;\n","import React, { useState } from 'react';\n\nimport MapArea from './components/map/MapArea';\nimport DateRangeSelect from './components/UI/DateRangeSelect';\n\nimport { mapsApiKey } from './keys';\nimport useMapFilter from './hooks/useMapFilter';\n\nimport classes from './App.module.scss';\nimport useMapData from './hooks/useMapData';\nimport LoadingModal from './components/UI/LoadingModal';\nimport QueryTable from './components/table/QueryTable';\nimport useMapViewport from './hooks/useMapViewport';\n\nimport '../node_modules/mapbox-gl/dist/mapbox-gl.css';\nimport useClickState from './hooks/useClickState';\n\nconst App: React.FC = () => {\n  const [viewport, setViewport] = useMapViewport({\n    latitude: 35.6762,\n    longitude: 139.6503,\n    zoom: 2\n  });\n  const [clickState, setClickState] = useClickState({\n    clickedFeature: null,\n    lng: 0,\n    lat: 0\n  });\n  const { mapFilter, setMapFilter } = useMapFilter();\n  const apiData = useMapData(mapFilter);\n  const [showDateInput, setShowDateInput] = useState(false);\n  const [showTable, setShowTable] = useState(false);\n\n  return (\n    <div className={classes.App}>\n      <LoadingModal show={apiData.calling} />\n\n      <DateRangeSelect\n        show={showDateInput}\n        handleClose={(): void => setShowDateInput(false)}\n        useMapFilter={{ mapFilter, setMapFilter }}\n      />\n\n      <QueryTable\n        setClickState={setClickState}\n        showTable={showTable}\n        setViewport={setViewport}\n        geoData={apiData.data}\n        orderBy={mapFilter.sortBy}\n        setMapFilter={setMapFilter}\n        closeTable={(): void => setShowTable(false)}\n      />\n      <MapArea\n        viewport={viewport}\n        clickStateObj={[clickState, setClickState]}\n        setViewport={setViewport}\n        mapsApiKey={mapsApiKey}\n        geoData={apiData.data}\n        mapFilter={mapFilter}\n        openDateSelect={(): void => setShowDateInput(true)}\n        openDateTable={(): void => setShowTable(true)}\n      />\n      {/* \n      TODO: Add Magnitude filter\n\n      TODO: Description\n\n      TODO: hide Magnitude scale on click\n\n      TODO: Add detail call on popUp \n\n      TODO: Add Testing\n\n      TODO: Table on click item zoom in map\n    */}\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"DateRangeSelect_modal__2KFkP\",\"dateRangeWrapper\":\"DateRangeSelect_dateRangeWrapper__3kkbi\",\"pickerWrapper\":\"DateRangeSelect_pickerWrapper__1vy7z\",\"inputsWrapper\":\"DateRangeSelect_inputsWrapper__HkY4-\",\"dateInputError\":\"DateRangeSelect_dateInputError__1CxOA\",\"hasError\":\"DateRangeSelect_hasError__3Duql\",\"toError\":\"DateRangeSelect_toError__3JLuh\",\"backToNormal\":\"DateRangeSelect_backToNormal__2irD3\",\"pickerError\":\"DateRangeSelect_pickerError__YVfiE\",\"buttonWrap\":\"DateRangeSelect_buttonWrap__1geWL\",\"title\":\"DateRangeSelect_title__2qYda\",\"magRangeWrap\":\"DateRangeSelect_magRangeWrap__2UrKk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"magWrapper\":\"MagnitudeScale_magWrapper__M2Mkb\",\"magTitle\":\"MagnitudeScale_magTitle__c3NrD\",\"magColorsWrap\":\"MagnitudeScale_magColorsWrap__36wYb\",\"magWrap\":\"MagnitudeScale_magWrap__14Vnc\",\"magNr\":\"MagnitudeScale_magNr__2pANd\",\"magColor\":\"MagnitudeScale_magColor__ICEOe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"DataTable_table__3dmL0\",\"headClass\":\"DataTable_headClass__ms7Vf\",\"tdClass\":\"DataTable_tdClass__3PJGI\",\"tableOrderable\":\"DataTable_tableOrderable__aTQ8z\",\"emptyTable\":\"DataTable_emptyTable__3nvwz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fromToInfoBox\":\"FromToInfoBox_fromToInfoBox__1Y-G2\",\"icon\":\"FromToInfoBox_icon__707Rp\",\"values\":\"FromToInfoBox_values__3r2uQ\",\"dateRange\":\"FromToInfoBox_dateRange__3Jcnz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"geoLocateStyle\":\"MapArea_geoLocateStyle__2HR4H\",\"fullscreenControlStyle\":\"MapArea_fullscreenControlStyle__14FZ1\",\"navStyle\":\"MapArea_navStyle__26vbL\",\"scaleControlStyle\":\"MapArea_scaleControlStyle__2NOA7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"InputComp_input__TX5JG\",\"inputError\":\"InputComp_inputError__3LniT\",\"label\":\"InputComp_label__124lz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputs\":\"RangeSlider_inputs__1xq4u\",\"switch\":\"RangeSlider_switch__1qeYB\",\"rangeInput\":\"RangeSlider_rangeInput__3vEZ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popUpDescription\":\"PopUpToolTip_popUpDescription__39FFC\",\"title\":\"PopUpToolTip_title__1quvx\",\"mag\":\"PopUpToolTip_mag__1Ci9A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadingBack\":\"LoadingModal_loadingBack__1FU8o\",\"modal\":\"LoadingModal_modal__1C3Wo\",\"loading\":\"LoadingModal_loading__MiEzl\",\"spinner\":\"LoadingModal_spinner__1G4pD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"magWrap\":\"MagnitudeComp_magWrap___yhOg\",\"magColor\":\"MagnitudeComp_magColor__3Wx46\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toggleTable\":\"ToggleTable_toggleTable__bIky_\",\"toggleTableImg\":\"ToggleTable_toggleTableImg__1UuxN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__12yuA\",\"defaultModal\":\"Modal_defaultModal__3O_q1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"smallBtn\":\"QueryTable_smallBtn__1sVv3\",\"tableModal\":\"QueryTable_tableModal__2kKzf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"HoverToolTip_tooltip__Vy-BA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textLink\":\"TextLink_textLink__1Tpob\"};","module.exports = __webpack_public_path__ + \"static/media/view_list-24px.d1fa362c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ButtonComp_button__1NNM7\",\"buttonSecondary\":\"ButtonComp_buttonSecondary__1PHtU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__33Bh5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__15LM-\"};"],"sourceRoot":""}